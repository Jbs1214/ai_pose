buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.1' // 최신 버전 사용
        classpath 'com.google.gms:google-services:4.3.15' // Firebase 서비스 추가
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = "../build"

subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    project.evaluationDependsOn(":app")
}

// 🔹 google_mlkit 관련 모듈에 namespace 설정 및 AndroidManifest.xml 패치
subprojects { subproject ->
    subproject.pluginManager.withPlugin("com.android.library") {
        if (subproject.name == "google_mlkit_commons") {
            subproject.extensions.configure(com.android.build.gradle.LibraryExtension) { libraryExtension ->
                libraryExtension.namespace = "com.google.mlkit.commons"
            }
        } else if (subproject.name == "google_mlkit_pose_detection") {
            subproject.extensions.configure(com.android.build.gradle.LibraryExtension) { libraryExtension ->
                libraryExtension.namespace = "com.google.mlkit.pose_detection"
            }
        }

        // AndroidManifest.xml에서 package 속성 제거 (Google ML Kit 오류 방지)
        if (subproject.name in ["google_mlkit_commons", "google_mlkit_pose_detection"]) {
            subproject.tasks.withType(com.android.build.gradle.tasks.ProcessLibraryManifest).configureEach { task ->
                task.doFirst {
                    def manifestFile = file("${subproject.projectDir}/src/main/AndroidManifest.xml")
                    if (manifestFile.exists()) {
                        def manifestText = manifestFile.text
                        def patchedText = manifestText.replaceAll(/package="[^"]*"/, '')
                        manifestFile.write(patchedText)
                        println "✅ Patched AndroidManifest.xml for ${subproject.name}"
                    }
                }
            }
        }
    }
}

// 프로젝트 클린 태스크
tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
